{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Folder","props","useState","isOpen","setIsOpen","name","children","direction","console","log","onClick","className","style","marginLeft","File","fileExtension","split","mp4","mp3","jpeg","png","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAmBA,IAAMA,EAAS,SAACC,GAAU,MAEIC,oBAAS,GAFb,mBAEjBC,EAFiB,KAETC,EAFS,KAGhBC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SACRC,EAAYJ,EAAS,OAAS,QAMpC,OADAK,QAAQC,IAAIF,GAEV,gCACE,uBAAMG,QANU,WAClBN,GAAWD,IAKT,UACE,mBAAGQ,UAAU,qBACb,mBAAGA,UAAS,gBAAWJ,EAAX,cAEbF,EACD,qBAAKO,MAAO,CAAEC,WAAY,QAA1B,SAAqCV,EAASG,EAAW,WAKzDQ,EAAO,SAACb,GAAW,IAEjBc,EADWd,EAATI,KACmBW,MAAM,KAAK,GAQtC,OACE,gCACE,+BACE,mBAAGL,UAAS,gBAVA,CAChBM,IAAK,aACLC,IAAK,cACLC,KAAM,aACNC,IAAK,sBAMgCL,GAArB,aAEbd,EAAMI,SAKEgB,EA3Df,WACE,OACE,gCACE,eAAC,EAAD,CAAQhB,KAAK,UAAb,UACE,eAAC,EAAD,CAAQA,KAAK,QAAb,UACE,cAAC,EAAD,CAAMA,KAAK,iBACX,cAAC,EAAD,CAAMA,KAAK,0BAGb,cAAC,EAAD,CAAMA,KAAK,YACX,cAAC,EAAD,CAAMA,KAAK,eAEb,cAAC,EAAD,CAAQA,KAAK,qBCFJiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8744c55f.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction App() {\n  return (\n    <div>\n      <Folder name=\"Desktop\">\n        <Folder name=\"Music\">\n          <File name=\"all_star.mp4\" />\n          <File name=\"Arijit-mashups.mp3\" />\n        </Folder>\n        {/* these are children props.children */}\n        <File name=\"Dog.png\" />\n        <File name=\"Cat.png\" />\n      </Folder>\n      <Folder name=\"Applications\" />\n    </div>\n  );\n}\n\nconst Folder = (props) => {\n  // console.log(props);\n  const [isOpen, setIsOpen] = useState(false);\n  const { name, children } = props;\n  const direction = isOpen ? \"down\" : \"right\";\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n  console.log(direction);\n  return (\n    <div>\n      <span onClick={handleClick}>\n        <i className=\"blue folder icon\" />\n        <i className={`caret ${direction} icon`} />\n      </span>\n      {name}\n      <div style={{ marginLeft: \"20px\" }}>{isOpen ? children : null}</div>\n    </div>\n  );\n};\n\nconst File = (props) => {\n  const { name } = props;\n  const fileExtension = name.split(\".\")[1];\n  const fileIcons = {\n    mp4: \"headphones\",\n    mp3: \"play circle\",\n    jpeg: \"file image\",\n    png: \"file image outline\",\n  };\n\n  return (\n    <div>\n      <span>\n        <i className={`caret ${fileIcons[fileExtension]} icon`}></i>\n      </span>\n      {props.name}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}